[{"E:\\Bello files\\B.MAN\\programing stuff\\logistics\\LogisticFullApplication\\Web Application Codes\\login\\src\\index.js":"1","E:\\Bello files\\B.MAN\\programing stuff\\logistics\\LogisticFullApplication\\Web Application Codes\\login\\src\\components\\App.js":"2","E:\\Bello files\\B.MAN\\programing stuff\\LogisticFullApplication-Login\\Web Application Codes\\login\\src\\index.js":"3","E:\\Bello files\\B.MAN\\programing stuff\\LogisticFullApplication-Login\\Web Application Codes\\login\\src\\components\\App.js":"4"},{"size":422,"mtime":1611749461000,"results":"5","hashOfConfig":"6"},{"size":5694,"mtime":1611749461000,"results":"7","hashOfConfig":"6"},{"size":422,"mtime":1611749461000,"results":"8","hashOfConfig":"9"},{"size":5694,"mtime":1611749461000,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1biru3l",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yimly2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Bello files\\B.MAN\\programing stuff\\logistics\\LogisticFullApplication\\Web Application Codes\\login\\src\\index.js",[],["21","22"],"E:\\Bello files\\B.MAN\\programing stuff\\logistics\\LogisticFullApplication\\Web Application Codes\\login\\src\\components\\App.js",["23","24"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./main.css\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  pap: {\n    boxShadow:'3px 5px 2px rgba(112, 128, 144, .5)',\n    border: '2px solid rgb(236, 203, 203)',\n    padding:'0% !mportant',\n    width:'30%',\n    // height:'auto',\n    marginTop:'2.5%',\n    borderRadius:' 4%',\n  },\n  avatar: {\n    // margin: theme.spacing(0),\n    marginLeft:'45%',\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    padding:'0%',\n    marginTop: theme.spacing(0),\n    \n  },\n  agree: {    \n    fontSize:'11px',\n    display:'inlineFlex',\n    fontWeight:'100',\n  },\n  submit: {\n    width:'40%',\n    // marginTop: '2%',\n    padding:'1%',\n    // marginBottom:'0.5%',\n    marginLeft:'30%',\n    fontSize:'12px',\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n    return(\n      <Formik\n      initialValues={{email: \"\", password: \"\" }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      }}\n      //********Handling validation messages yourself*******/\n      // validate={values => {\n      //   let errors = {};\n      //   if (!values.email) {\n      //     errors.email = \"Required\";\n      //   } else if (!EmailValidator.validate(values.email)) {\n      //     errors.email = \"Invalid email address\";\n      //   }\n  \n      //   const passwordRegex = /(?=.*[0-9])/;\n      //   if (!values.password) {\n      //     errors.password = \"Required\";\n      //   } else if (values.password.length < 8) {\n      //     errors.password = \"Password must be 8 characters long.\";\n      //   } else if (!passwordRegex.test(values.password)) {\n      //     errors.password = \"Invalida password. Must contain one number\";\n      //   }\n  \n      //   return errors;\n      // }}\n      //********Using Yum for validation********/\n  \n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n      })}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n  \n        return (\n            <Container className={classes.pap}>\n                <div className={classes.paper}>\n                <CssBaseline />\n          <form onSubmit={handleSubmit} className={classes.form}>\n            <Avatar className={classes.avatar}>\n              {/* <LockOutlinedIcon /> */}\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            \n            <label htmlFor=\"email\">Email</label>\n            <input\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"Enter your email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.email && touched.email && \"error\"}\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n            <label htmlFor=\"email\">Password</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.password && touched.password && \"error\"}\n            />\n            {errors.password && touched.password && (\n              <div className=\"input-feedback\">{errors.password}</div>\n            )}\n            <FormControlLabel\n              control={<Checkbox className=\"terms\" value=\"allowExtraEmails\" required color=\"primary\" />}\n              label=\"I Agree to Terms and Conditions.\"\n              className={classes.agree}\n            />\n            <button type=\"submit\" className={classes.submit} variant=\"contained\" disabled={isSubmitting}>\n              Sign In\n            </button>\n            <div className=\"social\">\n              <div className=\"socialSpan\">OR Sign In With</div>\n              <div className=\"socials\">\n                <a href=\"\" className=\"socialf\" >\n                <i class=\"fa fa-facebook-f\" aria-hidden=\"true\"></i>\n                  acebook</a>\n                OR\n                <a href=\"\" className=\"socialg\" >\n                <i class=\"fa fa-google\" aria-hidden=\"true\"></i>\n                  oogle</a>\n              </div>\n            </div>\n            <Link href=\"#\" variant=\"body2\">\n              <i className=\"signInAcc\">\n                Don't have an account? Sign Up\n              </i>\n            </Link>\n          </form>\n          </div>\n              </Container>\n        );\n      }}\n    </Formik>\n  \n    )\n}\n\n\n\n\n\n","E:\\Bello files\\B.MAN\\programing stuff\\LogisticFullApplication-Login\\Web Application Codes\\login\\src\\index.js",[],"E:\\Bello files\\B.MAN\\programing stuff\\LogisticFullApplication-Login\\Web Application Codes\\login\\src\\components\\App.js",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":158,"column":17,"nodeType":"33","endLine":158,"endColumn":49},{"ruleId":"31","severity":1,"message":"32","line":162,"column":17,"nodeType":"33","endLine":162,"endColumn":49},{"ruleId":"31","severity":1,"message":"32","line":158,"column":17,"nodeType":"33","endLine":158,"endColumn":49},{"ruleId":"31","severity":1,"message":"32","line":162,"column":17,"nodeType":"33","endLine":162,"endColumn":49},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]